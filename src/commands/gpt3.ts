import { SlashCommandBuilder, Interaction } from 'discord.js';
import { Player } from 'discord-player';
import { Configuration, OpenAIApi } from 'openai';

module.exports = {
    data: new SlashCommandBuilder()
		.setName('gpt3')
		.setDescription('Outputs a string generated by OpenAI\'s GPT-3.')
        .addStringOption(option => option.setName('prompt')
        .setDescription('The prompt to give GPT-3')
        .setRequired(true)),
	async execute(interaction:any, player:Player) {

        //TODO: Move OpenAI initialization to index.ts
        /*const { ChatGPTAPI } = await import('chatgpt');

        let prompt = interaction.options.getString('prompt');

        if (process.env.SESSION_TOKEN == undefined){
            return
        }
        const api = new ChatGPTAPI({
            sessionToken: process.env.SESSION_TOKEN
        })

        await interaction.deferReply()
        await api.ensureAuth();

        api.sendMessage(prompt).then(response => {
            let completion = response;

            completion = `Prompt: ${prompt} \n\nResponse: ` + completion;

            interaction.editReply(completion);

            console.log(completion);
        })*/

        /*
        const configuration =  new Configuration(
            {
                apiKey: process.env.OPENAI_API_KEY
            }
        );

        const openai = new OpenAIApi(configuration);

        await interaction.deferReply();

        openai.createCompletion({
            model: 'text-davinci-002',
            prompt: prompt,
            max_tokens: 128,
            n: 1,

        }).then(response => {
            let completion = response.data.choices[0].text;

            completion = `Prompt: ${prompt} \n\nResponse: ` + completion;

            interaction.editReply(completion);

            console.log(completion);
        })*/
    }
}